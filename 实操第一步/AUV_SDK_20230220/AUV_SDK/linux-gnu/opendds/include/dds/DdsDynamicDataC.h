// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p25
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:151

#ifndef _TAO_IDL_DDSDYNAMICDATAC_E4KYDB_H_
#define _TAO_IDL_DDSDYNAMICDATAC_E4KYDB_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "dds/DCPS/dcps_export.h"
#include "tao/Valuetype/ValueBase.h"
#include "tao/Valuetype/Valuetype_Adapter_Factory_Impl.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types_IDLv4.h"
TAO_BEGIN_VERSIONED_NAMESPACE_DECL

namespace CORBA
{
  using namespace IDLv4;
}

TAO_END_VERSIONED_NAMESPACE_DECL

#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Valuetype/Value_VarOut_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/BD_String_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"
#include /**/ "dds/Versioned_Namespace.h"

#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsDomainC.h"
#include "dds/DdsDynamicDataSeqC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO OpenDDS_Dcps_Export

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL



OPENDDS_END_VERSIONED_NAMESPACE_DECL



OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:37

namespace DDS
{
  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

  

#if !defined (_DDS_DYNAMICTYPE__VAR_OUT_CH_)
#define _DDS_DYNAMICTYPE__VAR_OUT_CH_

  class DynamicType;
  typedef DynamicType *DynamicType_ptr;

  typedef
    TAO_Objref_Var_T<
        DynamicType
      >
    DynamicType_var;
  
  typedef
    TAO_Objref_Out_T<
        DynamicType
      >
    DynamicType_out;

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // be/be_valuetype.cpp:568

  

#if !defined (_DDS_TYPEDESCRIPTOR__VAR_OUT_CH_)
#define _DDS_TYPEDESCRIPTOR__VAR_OUT_CH_

  class TypeDescriptor;
  typedef
    TAO_Value_Var_T<
        TypeDescriptor
      >
    TypeDescriptor_var;
  
  typedef
    TAO_Value_Out_T<
        TypeDescriptor
      >
    TypeDescriptor_out;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

  

#if !defined (_DDS_INCLUDEPATHSEQ_CH_)
#define _DDS_INCLUDEPATHSEQ_CH_

  class IncludePathSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        IncludePathSeq
      >
    IncludePathSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        IncludePathSeq
      >
    IncludePathSeq_out;

  class OpenDDS_Dcps_Export IncludePathSeq
    : public
        ::TAO::unbounded_basic_string_sequence<char>
  {
  public:
    IncludePathSeq (void);
    IncludePathSeq ( ::CORBA::ULong max);
    IncludePathSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Char ** buffer,
      ::CORBA::Boolean release = false);
#if defined (ACE_HAS_CPP11)
    IncludePathSeq (const IncludePathSeq &) = default;
    IncludePathSeq (IncludePathSeq &&) = default;
    IncludePathSeq& operator= (const IncludePathSeq &) = default;
    IncludePathSeq& operator= (IncludePathSeq &&) = default;
#endif /* ACE_HAS_CPP11 */
    virtual ~IncludePathSeq (void);
    
    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    
    typedef IncludePathSeq_var _var_type;
    typedef IncludePathSeq_out _out_type;
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:402

  typedef char * ObjectName;
  typedef ::CORBA::String_var ObjectName_var;
  typedef ::CORBA::String_out ObjectName_out;
  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

  

#if !defined (_DDS_TYPEOBJECT__VAR_OUT_CH_)
#define _DDS_TYPEOBJECT__VAR_OUT_CH_

  class TypeObject;
  typedef TypeObject *TypeObject_ptr;

  typedef
    TAO_Objref_Var_T<
        TypeObject
      >
    TypeObject_var;
  
  typedef
    TAO_Objref_Out_T<
        TypeObject
      >
    TypeObject_out;

#endif /* end #if !defined */

  
  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:101

  

#if !defined (_DDS_BOUNDSEQ_CH_)
#define _DDS_BOUNDSEQ_CH_

  class BoundSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        BoundSeq
      >
    BoundSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        BoundSeq
      >
    BoundSeq_out;

  class OpenDDS_Dcps_Export BoundSeq
    : public
        ::TAO::unbounded_value_sequence< ::CORBA::ULong>
  {
  public:
    BoundSeq (void);
    BoundSeq ( ::CORBA::ULong max);
    BoundSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::ULong* buffer,
      ::CORBA::Boolean release = false);
#if defined (ACE_HAS_CPP11)
    BoundSeq (const BoundSeq &) = default;
    BoundSeq (BoundSeq &&) = default;
    BoundSeq& operator= (const BoundSeq &) = default;
    BoundSeq& operator= (BoundSeq &&) = default;
#endif /* ACE_HAS_CPP11 */
    virtual ~BoundSeq (void);
    
    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    
    typedef BoundSeq_var _var_type;
    typedef BoundSeq_out _out_type;
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:369

  typedef ::CORBA::Octet TypeKind;
  typedef ::CORBA::Octet_out TypeKind_out;
  // TAO_IDL - Generated from
  // be/be_interface.cpp:750

  

#if !defined (_DDS_PARAMETERS__VAR_OUT_CH_)
#define _DDS_PARAMETERS__VAR_OUT_CH_

  class Parameters;
  typedef Parameters *Parameters_ptr;

  typedef
    TAO_Objref_Var_T<
        Parameters
      >
    Parameters_var;
  
  typedef
    TAO_Objref_Out_T<
        Parameters
      >
    Parameters_out;

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // be/be_valuetype.cpp:568

  

#if !defined (_DDS_ANNOTATIONDESCRIPTOR__VAR_OUT_CH_)
#define _DDS_ANNOTATIONDESCRIPTOR__VAR_OUT_CH_

  class AnnotationDescriptor;
  typedef
    TAO_Value_Var_T<
        AnnotationDescriptor
      >
    AnnotationDescriptor_var;
  
  typedef
    TAO_Value_Out_T<
        AnnotationDescriptor
      >
    AnnotationDescriptor_out;

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:52

  

  class OpenDDS_Dcps_Export AnnotationDescriptor
    : public virtual ::CORBA::ValueBase
  {
  public:
    // TAO_IDL - Generated from
    // be/be_type.cpp:304

    typedef AnnotationDescriptor * _ptr_type;
    typedef AnnotationDescriptor_var _var_type;
    typedef AnnotationDescriptor_out _out_type;

    static AnnotationDescriptor* _downcast ( ::CORBA::ValueBase *v);
    
    /// TAO extensions or internals
    static ::CORBA::Boolean _tao_unmarshal (
        TAO_InputCDR &strm,
        AnnotationDescriptor *&new_object);
    
    virtual const char* _tao_obv_repository_id (void) const;

    virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

    static const char* _tao_obv_static_repository_id (void);
  
  public:
    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/field_ch.cpp:232

    virtual void type ( ::DDS::DynamicType_ptr) = 0;
    virtual ::DDS::DynamicType_ptr type (void) const = 0;
  
  public:
    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/valuetype_ch.cpp:400

    
  public:
    virtual ::DDS::ReturnCode_t get_value (
        char *&, const char *
      ) = 0;
  
  public:
    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/valuetype_ch.cpp:400

    
  public:
    virtual ::DDS::ReturnCode_t get_all_value (
        ::DDS::Parameters_ptr &
      ) = 0;
  
  public:
    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/valuetype_ch.cpp:400

    
  public:
    virtual ::DDS::ReturnCode_t set_value (
        const char *, const char *
      ) = 0;
  
  public:
    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/valuetype_ch.cpp:400

    
  public:
    virtual ::DDS::ReturnCode_t copy_from (
        ::DDS::AnnotationDescriptor *
      ) = 0;
  
  public:
    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/valuetype_ch.cpp:400

    
  public:
    virtual ::CORBA::Boolean equals (
        ::DDS::AnnotationDescriptor *
      ) = 0;
  
  public:
    // TAO_IDL - Generated from
    // be/be_visitor_valuetype/valuetype_ch.cpp:400

    
  public:
    virtual ::CORBA::Boolean is_consistent (void) = 0;
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:239

  

protected:
  AnnotationDescriptor (void);
  virtual ~AnnotationDescriptor (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  AnnotationDescriptor (const AnnotationDescriptor &);
  void operator= (const AnnotationDescriptor &);
  
protected:
  
};
// TAO_IDL - Generated from
// be/be_valuetype.cpp:568



#if !defined (_DDS_VERBATIMTEXTDESCRIPTOR__VAR_OUT_CH_)
#define _DDS_VERBATIMTEXTDESCRIPTOR__VAR_OUT_CH_

class VerbatimTextDescriptor;
typedef
  TAO_Value_Var_T<
      VerbatimTextDescriptor
    >
  VerbatimTextDescriptor_var;

typedef
  TAO_Value_Out_T<
      VerbatimTextDescriptor
    >
  VerbatimTextDescriptor_out;

#endif /* end #if !defined */
// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:52



class OpenDDS_Dcps_Export VerbatimTextDescriptor
  : public virtual ::CORBA::ValueBase
{
public:
  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef VerbatimTextDescriptor * _ptr_type;
  typedef VerbatimTextDescriptor_var _var_type;
  typedef VerbatimTextDescriptor_out _out_type;

  static VerbatimTextDescriptor* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      VerbatimTextDescriptor *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:601

  virtual void placement (char *val) = 0;
  virtual void placement (const char *val) = 0;
  virtual void placement (const ::CORBA::String_var &val) = 0;
  virtual const char *placement (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:601

  virtual void text (char *val) = 0;
  virtual void text (const char *val) = 0;
  virtual void text (const ::CORBA::String_var &val) = 0;
  virtual const char *text (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:400

  
public:
  virtual ::DDS::ReturnCode_t copy_from (
      ::DDS::VerbatimTextDescriptor *
    ) = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:400

  
public:
  virtual ::CORBA::Boolean equals (
      ::DDS::VerbatimTextDescriptor *
    ) = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:400

  
public:
  virtual ::CORBA::Boolean is_consistent (void) = 0;
// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:239



protected:
  VerbatimTextDescriptor (void);
  virtual ~VerbatimTextDescriptor (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  VerbatimTextDescriptor (const VerbatimTextDescriptor &);
  void operator= (const VerbatimTextDescriptor &);
  
protected:
  
};
// TAO_IDL - Generated from
// be/be_visitor_enum/enum_ch.cpp:46

enum ExtensibilityKind
{
  FINAL,
  APPENDABLE,
  MUTABLE
};

typedef ExtensibilityKind &ExtensibilityKind_out;
// TAO_IDL - Generated from
// be/be_visitor_enum/enum_ch.cpp:46

enum TryConstructKind
{
  USE_DEFAULT,
  DISCARD,
  TRIM
};

typedef TryConstructKind &TryConstructKind_out;
// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:52



class OpenDDS_Dcps_Export TypeDescriptor
  : public virtual ::CORBA::ValueBase
{
public:
  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef TypeDescriptor * _ptr_type;
  typedef TypeDescriptor_var _var_type;
  typedef TypeDescriptor_out _out_type;

  static TypeDescriptor* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      TypeDescriptor *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:454

  virtual void kind (const ::DDS::TypeKind) = 0;
  virtual ::DDS::TypeKind kind (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:601

  virtual void name (char *val) = 0;
  virtual void name (const char *val) = 0;
  virtual void name (const ::CORBA::String_var &val) = 0;
  virtual const char *name (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:232

  virtual void base_type ( ::DDS::DynamicType_ptr) = 0;
  virtual ::DDS::DynamicType_ptr base_type (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:232

  virtual void discriminator_type ( ::DDS::DynamicType_ptr) = 0;
  virtual ::DDS::DynamicType_ptr discriminator_type (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:527

  virtual void bound (const DDS::BoundSeq &) = 0;
  virtual const DDS::BoundSeq &bound (void) const = 0;
  virtual DDS::BoundSeq &bound (void) = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:232

  virtual void element_type ( ::DDS::DynamicType_ptr) = 0;
  virtual ::DDS::DynamicType_ptr element_type (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:232

  virtual void key_element_type ( ::DDS::DynamicType_ptr) = 0;
  virtual ::DDS::DynamicType_ptr key_element_type (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:174

  virtual void extensibility_kind (DDS::ExtensibilityKind) = 0;
  virtual DDS::ExtensibilityKind extensibility_kind (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:454

  virtual void is_nested (const ::CORBA::Boolean) = 0;
  virtual ::CORBA::Boolean is_nested (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:400

  
public:
  virtual ::DDS::ReturnCode_t copy_from (
      ::DDS::TypeDescriptor *
    ) = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:400

  
public:
  virtual ::CORBA::Boolean equals (
      ::DDS::TypeDescriptor *
    ) = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:400

  
public:
  virtual ::CORBA::Boolean is_consistent (void) = 0;
// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:239



protected:
  TypeDescriptor (void);
  virtual ~TypeDescriptor (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  TypeDescriptor (const TypeDescriptor &);
  void operator= (const TypeDescriptor &);
  
protected:
  
};
// TAO_IDL - Generated from
// be/be_visitor_typedef/typedef_ch.cpp:369

typedef ::CORBA::ULong MemberId;
typedef ::CORBA::ULong_out MemberId_out;


// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_ch.cpp:101



#if !defined (_DDS_UNIONCASELABELSEQ_CH_)
#define _DDS_UNIONCASELABELSEQ_CH_

class UnionCaseLabelSeq;

typedef
  ::TAO_FixedSeq_Var_T<
      UnionCaseLabelSeq
    >
  UnionCaseLabelSeq_var;

typedef
  ::TAO_Seq_Out_T<
      UnionCaseLabelSeq
    >
  UnionCaseLabelSeq_out;

class OpenDDS_Dcps_Export UnionCaseLabelSeq
  : public
      ::TAO::unbounded_value_sequence< ::CORBA::Long>
{
public:
  UnionCaseLabelSeq (void);
  UnionCaseLabelSeq ( ::CORBA::ULong max);
  UnionCaseLabelSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::Long* buffer,
    ::CORBA::Boolean release = false);
#if defined (ACE_HAS_CPP11)
  UnionCaseLabelSeq (const UnionCaseLabelSeq &) = default;
  UnionCaseLabelSeq (UnionCaseLabelSeq &&) = default;
  UnionCaseLabelSeq& operator= (const UnionCaseLabelSeq &) = default;
  UnionCaseLabelSeq& operator= (UnionCaseLabelSeq &&) = default;
#endif /* ACE_HAS_CPP11 */
  virtual ~UnionCaseLabelSeq (void);
  
  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  
  typedef UnionCaseLabelSeq_var _var_type;
  typedef UnionCaseLabelSeq_out _out_type;
};

#endif /* end #if !defined */
// TAO_IDL - Generated from
// be/be_valuetype.cpp:568



#if !defined (_DDS_MEMBERDESCRIPTOR__VAR_OUT_CH_)
#define _DDS_MEMBERDESCRIPTOR__VAR_OUT_CH_

class MemberDescriptor;
typedef
  TAO_Value_Var_T<
      MemberDescriptor
    >
  MemberDescriptor_var;

typedef
  TAO_Value_Out_T<
      MemberDescriptor
    >
  MemberDescriptor_out;

#endif /* end #if !defined */
// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:52



class OpenDDS_Dcps_Export MemberDescriptor
  : public virtual ::CORBA::ValueBase
{
public:
  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef MemberDescriptor * _ptr_type;
  typedef MemberDescriptor_var _var_type;
  typedef MemberDescriptor_out _out_type;

  static MemberDescriptor* _downcast ( ::CORBA::ValueBase *v);
  
  /// TAO extensions or internals
  static ::CORBA::Boolean _tao_unmarshal (
      TAO_InputCDR &strm,
      MemberDescriptor *&new_object);
  
  virtual const char* _tao_obv_repository_id (void) const;

  virtual void _tao_obv_truncatable_repo_ids (Repository_Id_List &) const;

  static const char* _tao_obv_static_repository_id (void);

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:601

  virtual void name (char *val) = 0;
  virtual void name (const char *val) = 0;
  virtual void name (const ::CORBA::String_var &val) = 0;
  virtual const char *name (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:454

  virtual void id (const ::DDS::MemberId) = 0;
  virtual ::DDS::MemberId id (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:232

  virtual void type ( ::DDS::DynamicType_ptr) = 0;
  virtual ::DDS::DynamicType_ptr type (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:601

  virtual void default_value (char *val) = 0;
  virtual void default_value (const char *val) = 0;
  virtual void default_value (const ::CORBA::String_var &val) = 0;
  virtual const char *default_value (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:454

  virtual void index (const ::CORBA::ULong) = 0;
  virtual ::CORBA::ULong index (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:527

  virtual void label (const DDS::UnionCaseLabelSeq &) = 0;
  virtual const DDS::UnionCaseLabelSeq &label (void) const = 0;
  virtual DDS::UnionCaseLabelSeq &label (void) = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:174

  virtual void try_construct_kind (DDS::TryConstructKind) = 0;
  virtual DDS::TryConstructKind try_construct_kind (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:454

  virtual void is_key (const ::CORBA::Boolean) = 0;
  virtual ::CORBA::Boolean is_key (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:454

  virtual void is_optional (const ::CORBA::Boolean) = 0;
  virtual ::CORBA::Boolean is_optional (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:454

  virtual void is_must_understand (const ::CORBA::Boolean) = 0;
  virtual ::CORBA::Boolean is_must_understand (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:454

  virtual void is_shared (const ::CORBA::Boolean) = 0;
  virtual ::CORBA::Boolean is_shared (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:454

  virtual void is_default_label (const ::CORBA::Boolean) = 0;
  virtual ::CORBA::Boolean is_default_label (void) const = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:400

  
public:
  virtual ::DDS::ReturnCode_t copy_from (
      ::DDS::MemberDescriptor *
    ) = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:400

  
public:
  virtual ::CORBA::Boolean equals (
      ::DDS::MemberDescriptor *
    ) = 0;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_ch.cpp:400

  
public:
  virtual ::CORBA::Boolean is_consistent (void) = 0;
// TAO_IDL - Generated from
// be/be_visitor_valuetype/valuetype_ch.cpp:239



protected:
  MemberDescriptor (void);
  virtual ~MemberDescriptor (void);

  virtual ::CORBA::Boolean _tao_marshal_v (TAO_OutputCDR &) const;
  virtual ::CORBA::Boolean _tao_unmarshal_v (TAO_InputCDR &);
  virtual ::CORBA::Boolean _tao_match_formal_type (ptrdiff_t ) const;
  
private:
  MemberDescriptor (const MemberDescriptor &);
  void operator= (const MemberDescriptor &);
  
protected:
  
};
// TAO_IDL - Generated from
// be/be_interface.cpp:750



#if !defined (_DDS_DYNAMICTYPEMEMBER__VAR_OUT_CH_)
#define _DDS_DYNAMICTYPEMEMBER__VAR_OUT_CH_

class DynamicTypeMember;
typedef DynamicTypeMember *DynamicTypeMember_ptr;

typedef
  TAO_Objref_Var_T<
      DynamicTypeMember
    >
  DynamicTypeMember_var;

typedef
  TAO_Objref_Out_T<
      DynamicTypeMember
    >
  DynamicTypeMember_out;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ch.cpp:42



class OpenDDS_Dcps_Export DynamicTypeMember
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef DynamicTypeMember_ptr _ptr_type;
  typedef DynamicTypeMember_var _var_type;
  typedef DynamicTypeMember_out _out_type;

  // The static operations.
  static DynamicTypeMember_ptr _duplicate (DynamicTypeMember_ptr obj);

  static void _tao_release (DynamicTypeMember_ptr obj);

  static DynamicTypeMember_ptr _narrow (::CORBA::Object_ptr obj);
  static DynamicTypeMember_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static DynamicTypeMember_ptr _nil (void);

  virtual ::DDS::ReturnCode_t get_descriptor (
    ::DDS::MemberDescriptor *& descriptor) = 0;

  virtual ::CORBA::ULong get_annotation_count (
    void) = 0;

  virtual ::DDS::ReturnCode_t get_annotation (
    ::DDS::AnnotationDescriptor *& descriptor,
    ::CORBA::ULong idx) = 0;

  virtual ::CORBA::ULong get_verbatim_text_count (
    void) = 0;

  virtual ::DDS::ReturnCode_t get_verbatim_text (
    ::DDS::VerbatimTextDescriptor *& descriptor,
    ::CORBA::ULong idx) = 0;

  virtual ::CORBA::Boolean equals (
    ::DDS::DynamicTypeMember_ptr other) = 0;

  virtual ::DDS::MemberId get_id (
    void) = 0;

  virtual char * get_name (
    void) = 0;

  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:138

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  DynamicTypeMember (void);

  

  virtual ~DynamicTypeMember (void);

private:
  // Private and unimplemented for concrete interfaces.
  ACE_UNIMPLEMENTED_FUNC (DynamicTypeMember (const DynamicTypeMember &))
#if defined (ACE_HAS_CPP11)
  ACE_UNIMPLEMENTED_FUNC (DynamicTypeMember (DynamicTypeMember &&))
#endif /* ACE_HAS_CPP11 */
  ACE_UNIMPLEMENTED_FUNC (DynamicTypeMember &operator= (const DynamicTypeMember &))
#if defined (ACE_HAS_CPP11)
  ACE_UNIMPLEMENTED_FUNC (DynamicTypeMember &operator= (DynamicTypeMember &&))
#endif /* ACE_HAS_CPP11 */
};
// TAO_IDL - Generated from
// be/be_interface.cpp:750



#if !defined (_DDS_DYNAMICTYPEMEMBERSBYNAME__VAR_OUT_CH_)
#define _DDS_DYNAMICTYPEMEMBERSBYNAME__VAR_OUT_CH_

class DynamicTypeMembersByName;
typedef DynamicTypeMembersByName *DynamicTypeMembersByName_ptr;

typedef
  TAO_Objref_Var_T<
      DynamicTypeMembersByName
    >
  DynamicTypeMembersByName_var;

typedef
  TAO_Objref_Out_T<
      DynamicTypeMembersByName
    >
  DynamicTypeMembersByName_out;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ch.cpp:42



class OpenDDS_Dcps_Export DynamicTypeMembersByName
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef DynamicTypeMembersByName_ptr _ptr_type;
  typedef DynamicTypeMembersByName_var _var_type;
  typedef DynamicTypeMembersByName_out _out_type;

  // The static operations.
  static DynamicTypeMembersByName_ptr _duplicate (DynamicTypeMembersByName_ptr obj);

  static void _tao_release (DynamicTypeMembersByName_ptr obj);

  static DynamicTypeMembersByName_ptr _narrow (::CORBA::Object_ptr obj);
  static DynamicTypeMembersByName_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static DynamicTypeMembersByName_ptr _nil (void);

  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:138

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  DynamicTypeMembersByName (void);

  

  virtual ~DynamicTypeMembersByName (void);

private:
  // Private and unimplemented for concrete interfaces.
  ACE_UNIMPLEMENTED_FUNC (DynamicTypeMembersByName (const DynamicTypeMembersByName &))
#if defined (ACE_HAS_CPP11)
  ACE_UNIMPLEMENTED_FUNC (DynamicTypeMembersByName (DynamicTypeMembersByName &&))
#endif /* ACE_HAS_CPP11 */
  ACE_UNIMPLEMENTED_FUNC (DynamicTypeMembersByName &operator= (const DynamicTypeMembersByName &))
#if defined (ACE_HAS_CPP11)
  ACE_UNIMPLEMENTED_FUNC (DynamicTypeMembersByName &operator= (DynamicTypeMembersByName &&))
#endif /* ACE_HAS_CPP11 */
};
// TAO_IDL - Generated from
// be/be_interface.cpp:750



#if !defined (_DDS_DYNAMICTYPEMEMBERSBYID__VAR_OUT_CH_)
#define _DDS_DYNAMICTYPEMEMBERSBYID__VAR_OUT_CH_

class DynamicTypeMembersById;
typedef DynamicTypeMembersById *DynamicTypeMembersById_ptr;

typedef
  TAO_Objref_Var_T<
      DynamicTypeMembersById
    >
  DynamicTypeMembersById_var;

typedef
  TAO_Objref_Out_T<
      DynamicTypeMembersById
    >
  DynamicTypeMembersById_out;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ch.cpp:42



class OpenDDS_Dcps_Export DynamicTypeMembersById
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef DynamicTypeMembersById_ptr _ptr_type;
  typedef DynamicTypeMembersById_var _var_type;
  typedef DynamicTypeMembersById_out _out_type;

  // The static operations.
  static DynamicTypeMembersById_ptr _duplicate (DynamicTypeMembersById_ptr obj);

  static void _tao_release (DynamicTypeMembersById_ptr obj);

  static DynamicTypeMembersById_ptr _narrow (::CORBA::Object_ptr obj);
  static DynamicTypeMembersById_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static DynamicTypeMembersById_ptr _nil (void);

  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:138

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  DynamicTypeMembersById (void);

  

  virtual ~DynamicTypeMembersById (void);

private:
  // Private and unimplemented for concrete interfaces.
  ACE_UNIMPLEMENTED_FUNC (DynamicTypeMembersById (const DynamicTypeMembersById &))
#if defined (ACE_HAS_CPP11)
  ACE_UNIMPLEMENTED_FUNC (DynamicTypeMembersById (DynamicTypeMembersById &&))
#endif /* ACE_HAS_CPP11 */
  ACE_UNIMPLEMENTED_FUNC (DynamicTypeMembersById &operator= (const DynamicTypeMembersById &))
#if defined (ACE_HAS_CPP11)
  ACE_UNIMPLEMENTED_FUNC (DynamicTypeMembersById &operator= (DynamicTypeMembersById &&))
#endif /* ACE_HAS_CPP11 */
};


// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ch.cpp:42



class OpenDDS_Dcps_Export DynamicType
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef DynamicType_ptr _ptr_type;
  typedef DynamicType_var _var_type;
  typedef DynamicType_out _out_type;

  // The static operations.
  static DynamicType_ptr _duplicate (DynamicType_ptr obj);

  static void _tao_release (DynamicType_ptr obj);

  static DynamicType_ptr _narrow (::CORBA::Object_ptr obj);
  static DynamicType_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static DynamicType_ptr _nil (void);

  virtual ::DDS::ReturnCode_t get_descriptor (
    ::DDS::TypeDescriptor *& descriptor) = 0;

  virtual char * get_name (
    void) = 0;

  virtual ::DDS::TypeKind get_kind (
    void) = 0;

  virtual ::DDS::ReturnCode_t get_member_by_name (
    ::DDS::DynamicTypeMember_ptr & member,
    const char * name) = 0;

  virtual ::DDS::ReturnCode_t get_all_members_by_name (
    ::DDS::DynamicTypeMembersByName_ptr & member) = 0;

  virtual ::DDS::ReturnCode_t get_member (
    ::DDS::DynamicTypeMember_ptr & member,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t get_all_members (
    ::DDS::DynamicTypeMembersById_ptr & member) = 0;

  virtual ::CORBA::ULong get_member_count (
    void) = 0;

  virtual ::DDS::ReturnCode_t get_member_by_index (
    ::DDS::DynamicTypeMember_ptr & member,
    ::CORBA::ULong index) = 0;

  virtual ::CORBA::ULong get_annotation_count (
    void) = 0;

  virtual ::DDS::ReturnCode_t get_annotation (
    ::DDS::AnnotationDescriptor *& descriptor,
    ::CORBA::ULong idx) = 0;

  virtual ::CORBA::ULong get_verbatim_text_count (
    void) = 0;

  virtual ::DDS::ReturnCode_t get_verbatim_text (
    ::DDS::VerbatimTextDescriptor *& descriptor,
    ::CORBA::ULong idx) = 0;

  virtual ::CORBA::Boolean equals (
    ::DDS::DynamicType_ptr other) = 0;

  virtual void clear (
    void) = 0;

  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:138

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  DynamicType (void);

  

  virtual ~DynamicType (void);

private:
  // Private and unimplemented for concrete interfaces.
  ACE_UNIMPLEMENTED_FUNC (DynamicType (const DynamicType &))
#if defined (ACE_HAS_CPP11)
  ACE_UNIMPLEMENTED_FUNC (DynamicType (DynamicType &&))
#endif /* ACE_HAS_CPP11 */
  ACE_UNIMPLEMENTED_FUNC (DynamicType &operator= (const DynamicType &))
#if defined (ACE_HAS_CPP11)
  ACE_UNIMPLEMENTED_FUNC (DynamicType &operator= (DynamicType &&))
#endif /* ACE_HAS_CPP11 */
};
// TAO_IDL - Generated from
// be/be_interface.cpp:750



#if !defined (_DDS_DYNAMICDATA__VAR_OUT_CH_)
#define _DDS_DYNAMICDATA__VAR_OUT_CH_

class DynamicData;
typedef DynamicData *DynamicData_ptr;

typedef
  TAO_Objref_Var_T<
      DynamicData
    >
  DynamicData_var;

typedef
  TAO_Objref_Out_T<
      DynamicData
    >
  DynamicData_out;

#endif /* end #if !defined */


// TAO_IDL - Generated from
// be/be_visitor_interface/interface_ch.cpp:42



class OpenDDS_Dcps_Export DynamicData
  : public virtual ::CORBA::Object
{
public:
  // TAO_IDL - Generated from
  // be/be_type.cpp:304

  typedef DynamicData_ptr _ptr_type;
  typedef DynamicData_var _var_type;
  typedef DynamicData_out _out_type;

  // The static operations.
  static DynamicData_ptr _duplicate (DynamicData_ptr obj);

  static void _tao_release (DynamicData_ptr obj);

  static DynamicData_ptr _narrow (::CORBA::Object_ptr obj);
  static DynamicData_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
  static DynamicData_ptr _nil (void);

  virtual ::DDS::DynamicType_ptr type (
    void) = 0;

  virtual ::DDS::ReturnCode_t get_descriptor (
    ::DDS::MemberDescriptor *& value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_descriptor (
    ::DDS::MemberId id,
    ::DDS::MemberDescriptor * value) = 0;

  virtual ::CORBA::Boolean equals (
    ::DDS::DynamicData_ptr other) = 0;

  virtual ::DDS::MemberId get_member_id_by_name (
    const char * name) = 0;

  virtual ::DDS::MemberId get_member_id_at_index (
    ::CORBA::ULong index) = 0;

  virtual ::CORBA::ULong get_item_count (
    void) = 0;

  virtual ::DDS::ReturnCode_t clear_all_values (
    void) = 0;

  virtual ::DDS::ReturnCode_t clear_nonkey_values (
    void) = 0;

  virtual ::DDS::ReturnCode_t clear_value (
    ::DDS::MemberId id) = 0;

  virtual ::DDS::DynamicData_ptr loan_value (
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t return_loaned_value (
    ::DDS::DynamicData_ptr value) = 0;

  virtual ::DDS::DynamicData_ptr clone (
    void) = 0;

  virtual ::DDS::ReturnCode_t get_int32_value (
    ::CORBA::Long & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_int32_value (
    ::DDS::MemberId id,
    ::CORBA::Long value) = 0;

  virtual ::DDS::ReturnCode_t get_uint32_value (
    ::CORBA::ULong & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_uint32_value (
    ::DDS::MemberId id,
    ::CORBA::ULong value) = 0;

  virtual ::DDS::ReturnCode_t get_int8_value (
    ::CORBA::Int8 & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_int8_value (
    ::DDS::MemberId id,
    ::CORBA::Int8 value) = 0;

  virtual ::DDS::ReturnCode_t get_uint8_value (
    ::CORBA::UInt8 & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_uint8_value (
    ::DDS::MemberId id,
    ::CORBA::UInt8 value) = 0;

  virtual ::DDS::ReturnCode_t get_int16_value (
    ::CORBA::Short & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_int16_value (
    ::DDS::MemberId id,
    ::CORBA::Short value) = 0;

  virtual ::DDS::ReturnCode_t get_uint16_value (
    ::CORBA::UShort & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_uint16_value (
    ::DDS::MemberId id,
    ::CORBA::UShort value) = 0;

  virtual ::DDS::ReturnCode_t get_int64_value (
    ::CORBA::LongLong & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_int64_value (
    ::DDS::MemberId id,
    ::CORBA::LongLong value) = 0;

  virtual ::DDS::ReturnCode_t get_uint64_value (
    ::CORBA::ULongLong & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_uint64_value (
    ::DDS::MemberId id,
    ::CORBA::ULongLong value) = 0;

  virtual ::DDS::ReturnCode_t get_float32_value (
    ::CORBA::Float & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_float32_value (
    ::DDS::MemberId id,
    ::CORBA::Float value) = 0;

  virtual ::DDS::ReturnCode_t get_float64_value (
    ::CORBA::Double & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_float64_value (
    ::DDS::MemberId id,
    ::CORBA::Double value) = 0;

  virtual ::DDS::ReturnCode_t get_float128_value (
    ::CORBA::LongDouble & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_float128_value (
    ::DDS::MemberId id,
    ::CORBA::LongDouble value) = 0;

  virtual ::DDS::ReturnCode_t get_char8_value (
    ::CORBA::Char & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_char8_value (
    ::DDS::MemberId id,
    ::CORBA::Char value) = 0;

  virtual ::DDS::ReturnCode_t get_char16_value (
    ::CORBA::WChar & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_char16_value (
    ::DDS::MemberId id,
    ::CORBA::WChar value) = 0;

  virtual ::DDS::ReturnCode_t get_byte_value (
    ::CORBA::Octet & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_byte_value (
    ::DDS::MemberId id,
    ::CORBA::Octet value) = 0;

  virtual ::DDS::ReturnCode_t get_boolean_value (
    ::CORBA::Boolean & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_boolean_value (
    ::DDS::MemberId id,
    ::CORBA::Boolean value) = 0;

  virtual ::DDS::ReturnCode_t get_string_value (
    char *& value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_string_value (
    ::DDS::MemberId id,
    const char * value) = 0;

  virtual ::DDS::ReturnCode_t get_wstring_value (
    ::CORBA::WChar *& value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_wstring_value (
    ::DDS::MemberId id,
    const ::CORBA::WChar * value) = 0;

  virtual ::DDS::ReturnCode_t get_complex_value (
    ::DDS::DynamicData_ptr & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_complex_value (
    ::DDS::MemberId id,
    ::DDS::DynamicData_ptr value) = 0;

  virtual ::DDS::ReturnCode_t get_int32_values (
    ::DDS::Int32Seq & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_int32_values (
    ::DDS::MemberId id,
    const ::DDS::Int32Seq & value) = 0;

  virtual ::DDS::ReturnCode_t get_uint32_values (
    ::DDS::UInt32Seq & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_uint32_values (
    ::DDS::MemberId id,
    const ::DDS::UInt32Seq & value) = 0;

  virtual ::DDS::ReturnCode_t get_int8_values (
    ::DDS::Int8Seq & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_int8_values (
    ::DDS::MemberId id,
    const ::DDS::Int8Seq & value) = 0;

  virtual ::DDS::ReturnCode_t get_uint8_values (
    ::DDS::UInt8Seq & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_uint8_values (
    ::DDS::MemberId id,
    const ::DDS::UInt8Seq & value) = 0;

  virtual ::DDS::ReturnCode_t get_int16_values (
    ::DDS::Int16Seq & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_int16_values (
    ::DDS::MemberId id,
    const ::DDS::Int16Seq & value) = 0;

  virtual ::DDS::ReturnCode_t get_uint16_values (
    ::DDS::UInt16Seq & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_uint16_values (
    ::DDS::MemberId id,
    const ::DDS::UInt16Seq & value) = 0;

  virtual ::DDS::ReturnCode_t get_int64_values (
    ::DDS::Int64Seq & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_int64_values (
    ::DDS::MemberId id,
    const ::DDS::Int64Seq & value) = 0;

  virtual ::DDS::ReturnCode_t get_uint64_values (
    ::DDS::UInt64Seq & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_uint64_values (
    ::DDS::MemberId id,
    const ::DDS::UInt64Seq & value) = 0;

  virtual ::DDS::ReturnCode_t get_float32_values (
    ::DDS::Float32Seq & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_float32_values (
    ::DDS::MemberId id,
    const ::DDS::Float32Seq & value) = 0;

  virtual ::DDS::ReturnCode_t get_float64_values (
    ::DDS::Float64Seq & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_float64_values (
    ::DDS::MemberId id,
    const ::DDS::Float64Seq & value) = 0;

  virtual ::DDS::ReturnCode_t get_float128_values (
    ::DDS::Float128Seq & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_float128_values (
    ::DDS::MemberId id,
    const ::DDS::Float128Seq & value) = 0;

  virtual ::DDS::ReturnCode_t get_char8_values (
    ::DDS::CharSeq & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_char8_values (
    ::DDS::MemberId id,
    const ::DDS::CharSeq & value) = 0;

  virtual ::DDS::ReturnCode_t get_char16_values (
    ::DDS::WcharSeq & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_char16_values (
    ::DDS::MemberId id,
    const ::DDS::WcharSeq & value) = 0;

  virtual ::DDS::ReturnCode_t get_byte_values (
    ::DDS::ByteSeq & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_byte_values (
    ::DDS::MemberId id,
    const ::DDS::ByteSeq & value) = 0;

  virtual ::DDS::ReturnCode_t get_boolean_values (
    ::DDS::BooleanSeq & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_boolean_values (
    ::DDS::MemberId id,
    const ::DDS::BooleanSeq & value) = 0;

  virtual ::DDS::ReturnCode_t get_string_values (
    ::DDS::StringSeq & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_string_values (
    ::DDS::MemberId id,
    const ::DDS::StringSeq & value) = 0;

  virtual ::DDS::ReturnCode_t get_wstring_values (
    ::DDS::WstringSeq & value,
    ::DDS::MemberId id) = 0;

  virtual ::DDS::ReturnCode_t set_wstring_values (
    ::DDS::MemberId id,
    const ::DDS::WstringSeq & value) = 0;

  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:138

  

  virtual ::CORBA::Boolean _is_a (const char *type_id);
  virtual const char* _interface_repository_id (void) const;
  virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);

protected:
  // Abstract or local interface only.
  DynamicData (void);

  

  virtual ~DynamicData (void);

private:
  // Private and unimplemented for concrete interfaces.
  ACE_UNIMPLEMENTED_FUNC (DynamicData (const DynamicData &))
#if defined (ACE_HAS_CPP11)
  ACE_UNIMPLEMENTED_FUNC (DynamicData (DynamicData &&))
#endif /* ACE_HAS_CPP11 */
  ACE_UNIMPLEMENTED_FUNC (DynamicData &operator= (const DynamicData &))
#if defined (ACE_HAS_CPP11)
  ACE_UNIMPLEMENTED_FUNC (DynamicData &operator= (DynamicData &&))
#endif /* ACE_HAS_CPP11 */
};


// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:65


} // module DDS
// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:66




OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:301

  

#if !defined (_DDS_TYPEDESCRIPTOR__ARG_TRAITS_)
#define _DDS_TYPEDESCRIPTOR__ARG_TRAITS_

  template<>
  class Arg_Traits< ::DDS::TypeDescriptor>
    : public
        Object_Arg_Traits_T<
            ::DDS::TypeDescriptor *,
            ::DDS::TypeDescriptor_var,
            ::DDS::TypeDescriptor_out,
            TAO::Value_Traits<DDS::TypeDescriptor>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

#if !defined (_OBJECTNAME256__ARG_TRAITS_)
#define _OBJECTNAME256__ARG_TRAITS_

  struct ObjectName_256 {};

  template<>
  class Arg_Traits<ObjectName_256>
    : public
        BD_String_Arg_Traits_T<
            CORBA::String_var,
            256,
            TAO::Any_Insert_Policy_Noop
        >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:674

  

  template<>
  class Arg_Traits< ::DDS::BoundSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::BoundSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:892

  

  template<>
  class Arg_Traits< ::DDS::ExtensibilityKind>
    : public
        Basic_Arg_Traits_T<
            ::DDS::ExtensibilityKind,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:674

  

  template<>
  class Arg_Traits< ::DDS::IncludePathSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::IncludePathSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:301

  

#if !defined (_DDS_ANNOTATIONDESCRIPTOR__ARG_TRAITS_)
#define _DDS_ANNOTATIONDESCRIPTOR__ARG_TRAITS_

  template<>
  class Arg_Traits< ::DDS::AnnotationDescriptor>
    : public
        Object_Arg_Traits_T<
            ::DDS::AnnotationDescriptor *,
            ::DDS::AnnotationDescriptor_var,
            ::DDS::AnnotationDescriptor_out,
            TAO::Value_Traits<DDS::AnnotationDescriptor>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:301

  

#if !defined (_DDS_VERBATIMTEXTDESCRIPTOR__ARG_TRAITS_)
#define _DDS_VERBATIMTEXTDESCRIPTOR__ARG_TRAITS_

  template<>
  class Arg_Traits< ::DDS::VerbatimTextDescriptor>
    : public
        Object_Arg_Traits_T<
            ::DDS::VerbatimTextDescriptor *,
            ::DDS::VerbatimTextDescriptor_var,
            ::DDS::VerbatimTextDescriptor_out,
            TAO::Value_Traits<DDS::VerbatimTextDescriptor>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:892

  

  template<>
  class Arg_Traits< ::DDS::TryConstructKind>
    : public
        Basic_Arg_Traits_T<
            ::DDS::TryConstructKind,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:674

  

  template<>
  class Arg_Traits< ::DDS::UnionCaseLabelSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::DDS::UnionCaseLabelSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:301

  

#if !defined (_DDS_MEMBERDESCRIPTOR__ARG_TRAITS_)
#define _DDS_MEMBERDESCRIPTOR__ARG_TRAITS_

  template<>
  class Arg_Traits< ::DDS::MemberDescriptor>
    : public
        Object_Arg_Traits_T<
            ::DDS::MemberDescriptor *,
            ::DDS::MemberDescriptor_var,
            ::DDS::MemberDescriptor_out,
            TAO::Value_Traits<DDS::MemberDescriptor>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_valuetype/obv_module.cpp:46

namespace OBV_DDS
{
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_obv_ch.cpp:46

  

  // OBV_ class
  class OpenDDS_Dcps_Export AnnotationDescriptor
    : public virtual DDS::AnnotationDescriptor
  {

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:232

  virtual void type ( ::DDS::DynamicType_ptr);
  virtual ::DDS::DynamicType_ptr type (void) const;

protected:
  AnnotationDescriptor (void);
  AnnotationDescriptor (
      ::DDS::DynamicType_ptr _tao_init_type
    );
  virtual ~AnnotationDescriptor (void);private:
    DDS::DynamicType_var _pd_type;
    CORBA::Boolean require_truncation_;
  };
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_obv_ch.cpp:46

  

  // OBV_ class
  class OpenDDS_Dcps_Export VerbatimTextDescriptor
    : public virtual DDS::VerbatimTextDescriptor
  {

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:601

  virtual void placement (char *val);
  virtual void placement (const char *val);
  virtual void placement (const ::CORBA::String_var &val);
  virtual const char *placement (void) const;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:601

  virtual void text (char *val);
  virtual void text (const char *val);
  virtual void text (const ::CORBA::String_var &val);
  virtual const char *text (void) const;

protected:
  VerbatimTextDescriptor (void);
  VerbatimTextDescriptor (
      const char * _tao_init_placement,
      const char * _tao_init_text
    );
  virtual ~VerbatimTextDescriptor (void);private:
    ::TAO::String_Manager _pd_placement;
    ::TAO::String_Manager _pd_text;
    CORBA::Boolean require_truncation_;
  };
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_obv_ch.cpp:46

  

  // OBV_ class
  class OpenDDS_Dcps_Export TypeDescriptor
    : public virtual DDS::TypeDescriptor
  {

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:454

  virtual void kind (const ::DDS::TypeKind);
  virtual ::DDS::TypeKind kind (void) const;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:601

  virtual void name (char *val);
  virtual void name (const char *val);
  virtual void name (const ::CORBA::String_var &val);
  virtual const char *name (void) const;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:232

  virtual void base_type ( ::DDS::DynamicType_ptr);
  virtual ::DDS::DynamicType_ptr base_type (void) const;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:232

  virtual void discriminator_type ( ::DDS::DynamicType_ptr);
  virtual ::DDS::DynamicType_ptr discriminator_type (void) const;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:527

  virtual void bound (const DDS::BoundSeq &);
  virtual const DDS::BoundSeq &bound (void) const;
  virtual DDS::BoundSeq &bound (void);

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:232

  virtual void element_type ( ::DDS::DynamicType_ptr);
  virtual ::DDS::DynamicType_ptr element_type (void) const;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:232

  virtual void key_element_type ( ::DDS::DynamicType_ptr);
  virtual ::DDS::DynamicType_ptr key_element_type (void) const;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:174

  virtual void extensibility_kind (DDS::ExtensibilityKind);
  virtual DDS::ExtensibilityKind extensibility_kind (void) const;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:454

  virtual void is_nested (const ::CORBA::Boolean);
  virtual ::CORBA::Boolean is_nested (void) const;

protected:
  TypeDescriptor (void);
  TypeDescriptor (
      ::DDS::TypeKind _tao_init_kind,
      const char * _tao_init_name,
      ::DDS::DynamicType_ptr _tao_init_base_type,
      ::DDS::DynamicType_ptr _tao_init_discriminator_type,
      const ::DDS::BoundSeq & _tao_init_bound,
      ::DDS::DynamicType_ptr _tao_init_element_type,
      ::DDS::DynamicType_ptr _tao_init_key_element_type,
      ::DDS::ExtensibilityKind _tao_init_extensibility_kind,
      ::CORBA::Boolean _tao_init_is_nested
    );
  virtual ~TypeDescriptor (void);private:
    DDS::TypeKind _pd_kind;
    ::TAO::String_Manager _pd_name;
    DDS::DynamicType_var _pd_base_type;
    DDS::DynamicType_var _pd_discriminator_type;
    DDS::BoundSeq _pd_bound;
    DDS::DynamicType_var _pd_element_type;
    DDS::DynamicType_var _pd_key_element_type;
    DDS::ExtensibilityKind _pd_extensibility_kind;
    ::CORBA::Boolean _pd_is_nested;
    CORBA::Boolean require_truncation_;
  };
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/valuetype_obv_ch.cpp:46

  

  // OBV_ class
  class OpenDDS_Dcps_Export MemberDescriptor
    : public virtual DDS::MemberDescriptor
  {

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:601

  virtual void name (char *val);
  virtual void name (const char *val);
  virtual void name (const ::CORBA::String_var &val);
  virtual const char *name (void) const;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:454

  virtual void id (const ::DDS::MemberId);
  virtual ::DDS::MemberId id (void) const;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:232

  virtual void type ( ::DDS::DynamicType_ptr);
  virtual ::DDS::DynamicType_ptr type (void) const;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:601

  virtual void default_value (char *val);
  virtual void default_value (const char *val);
  virtual void default_value (const ::CORBA::String_var &val);
  virtual const char *default_value (void) const;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:454

  virtual void index (const ::CORBA::ULong);
  virtual ::CORBA::ULong index (void) const;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:527

  virtual void label (const DDS::UnionCaseLabelSeq &);
  virtual const DDS::UnionCaseLabelSeq &label (void) const;
  virtual DDS::UnionCaseLabelSeq &label (void);

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:174

  virtual void try_construct_kind (DDS::TryConstructKind);
  virtual DDS::TryConstructKind try_construct_kind (void) const;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:454

  virtual void is_key (const ::CORBA::Boolean);
  virtual ::CORBA::Boolean is_key (void) const;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:454

  virtual void is_optional (const ::CORBA::Boolean);
  virtual ::CORBA::Boolean is_optional (void) const;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:454

  virtual void is_must_understand (const ::CORBA::Boolean);
  virtual ::CORBA::Boolean is_must_understand (void) const;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:454

  virtual void is_shared (const ::CORBA::Boolean);
  virtual ::CORBA::Boolean is_shared (void) const;

public:
  // TAO_IDL - Generated from
  // be/be_visitor_valuetype/field_ch.cpp:454

  virtual void is_default_label (const ::CORBA::Boolean);
  virtual ::CORBA::Boolean is_default_label (void) const;

protected:
  MemberDescriptor (void);
  MemberDescriptor (
      const char * _tao_init_name,
      ::DDS::MemberId _tao_init_id,
      ::DDS::DynamicType_ptr _tao_init_type,
      const char * _tao_init_default_value,
      ::CORBA::ULong _tao_init_index,
      const ::DDS::UnionCaseLabelSeq & _tao_init_label,
      ::DDS::TryConstructKind _tao_init_try_construct_kind,
      ::CORBA::Boolean _tao_init_is_key,
      ::CORBA::Boolean _tao_init_is_optional,
      ::CORBA::Boolean _tao_init_is_must_understand,
      ::CORBA::Boolean _tao_init_is_shared,
      ::CORBA::Boolean _tao_init_is_default_label
    );
  virtual ~MemberDescriptor (void);private:
    ::TAO::String_Manager _pd_name;
    DDS::MemberId _pd_id;
    DDS::DynamicType_var _pd_type;
    ::TAO::String_Manager _pd_default_value;
    ::CORBA::ULong _pd_index;
    DDS::UnionCaseLabelSeq _pd_label;
    DDS::TryConstructKind _pd_try_construct_kind;
    ::CORBA::Boolean _pd_is_key;
    ::CORBA::Boolean _pd_is_optional;
    ::CORBA::Boolean _pd_is_must_understand;
    ::CORBA::Boolean _pd_is_shared;
    ::CORBA::Boolean _pd_is_default_label;
    CORBA::Boolean require_truncation_;
  };
}
// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:60




OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_DDS_TYPEDESCRIPTOR__TRAITS_)
#define _DDS_TYPEDESCRIPTOR__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Value_Traits<DDS::TypeDescriptor>
  {
    static void add_ref (DDS::TypeDescriptor *);
    static void remove_ref (DDS::TypeDescriptor *);
    static void release (DDS::TypeDescriptor *);
  };

#endif /* end #if !defined */

#if !defined (_DDS_DYNAMICTYPE__TRAITS_)
#define _DDS_DYNAMICTYPE__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::DynamicType>
  {
    static ::DDS::DynamicType_ptr duplicate (
        ::DDS::DynamicType_ptr p);
    static void release (
        ::DDS::DynamicType_ptr p);
    static ::DDS::DynamicType_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::DynamicType_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_TYPEOBJECT__TRAITS_)
#define _DDS_TYPEOBJECT__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::TypeObject>
  {
    static ::DDS::TypeObject_ptr duplicate (
        ::DDS::TypeObject_ptr p);
    static void release (
        ::DDS::TypeObject_ptr p);
    static ::DDS::TypeObject_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::TypeObject_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_PARAMETERS__TRAITS_)
#define _DDS_PARAMETERS__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::Parameters>
  {
    static ::DDS::Parameters_ptr duplicate (
        ::DDS::Parameters_ptr p);
    static void release (
        ::DDS::Parameters_ptr p);
    static ::DDS::Parameters_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::Parameters_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_ANNOTATIONDESCRIPTOR__TRAITS_)
#define _DDS_ANNOTATIONDESCRIPTOR__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Value_Traits<DDS::AnnotationDescriptor>
  {
    static void add_ref (DDS::AnnotationDescriptor *);
    static void remove_ref (DDS::AnnotationDescriptor *);
    static void release (DDS::AnnotationDescriptor *);
  };

#endif /* end #if !defined */

#if !defined (_DDS_VERBATIMTEXTDESCRIPTOR__TRAITS_)
#define _DDS_VERBATIMTEXTDESCRIPTOR__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Value_Traits<DDS::VerbatimTextDescriptor>
  {
    static void add_ref (DDS::VerbatimTextDescriptor *);
    static void remove_ref (DDS::VerbatimTextDescriptor *);
    static void release (DDS::VerbatimTextDescriptor *);
  };

#endif /* end #if !defined */

#if !defined (_DDS_MEMBERDESCRIPTOR__TRAITS_)
#define _DDS_MEMBERDESCRIPTOR__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Value_Traits<DDS::MemberDescriptor>
  {
    static void add_ref (DDS::MemberDescriptor *);
    static void remove_ref (DDS::MemberDescriptor *);
    static void release (DDS::MemberDescriptor *);
  };

#endif /* end #if !defined */

#if !defined (_DDS_DYNAMICTYPEMEMBER__TRAITS_)
#define _DDS_DYNAMICTYPEMEMBER__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::DynamicTypeMember>
  {
    static ::DDS::DynamicTypeMember_ptr duplicate (
        ::DDS::DynamicTypeMember_ptr p);
    static void release (
        ::DDS::DynamicTypeMember_ptr p);
    static ::DDS::DynamicTypeMember_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::DynamicTypeMember_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_DYNAMICTYPEMEMBERSBYNAME__TRAITS_)
#define _DDS_DYNAMICTYPEMEMBERSBYNAME__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::DynamicTypeMembersByName>
  {
    static ::DDS::DynamicTypeMembersByName_ptr duplicate (
        ::DDS::DynamicTypeMembersByName_ptr p);
    static void release (
        ::DDS::DynamicTypeMembersByName_ptr p);
    static ::DDS::DynamicTypeMembersByName_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::DynamicTypeMembersByName_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_DYNAMICTYPEMEMBERSBYID__TRAITS_)
#define _DDS_DYNAMICTYPEMEMBERSBYID__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::DynamicTypeMembersById>
  {
    static ::DDS::DynamicTypeMembersById_ptr duplicate (
        ::DDS::DynamicTypeMembersById_ptr p);
    static void release (
        ::DDS::DynamicTypeMembersById_ptr p);
    static ::DDS::DynamicTypeMembersById_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::DynamicTypeMembersById_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_DDS_DYNAMICDATA__TRAITS_)
#define _DDS_DYNAMICDATA__TRAITS_

  template<>
  struct OpenDDS_Dcps_Export Objref_Traits< ::DDS::DynamicData>
  {
    static ::DDS::DynamicData_ptr duplicate (
        ::DDS::DynamicData_ptr p);
    static void release (
        ::DDS::DynamicData_ptr p);
    static ::DDS::DynamicData_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::DDS::DynamicData_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1666



OPENDDS_END_VERSIONED_NAMESPACE_DECL

#if defined (__ACE_INLINE__)
#include "DdsDynamicDataC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

